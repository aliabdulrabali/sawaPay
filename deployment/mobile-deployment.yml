name: SawaPay Mobile App CI/CD

on:
  push:
    branches: [ main, development ]
    paths:
      - 'mobile/**'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'mobile/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./mobile
      run: npm ci
    
    - name: Run linting
      working-directory: ./mobile
      run: npm run lint
    
    - name: Run tests
      working-directory: ./mobile
      run: npm test

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./mobile
      run: npm ci
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make Gradlew Executable
      working-directory: ./mobile/android
      run: chmod +x ./gradlew
    
    - name: Build Android App
      working-directory: ./mobile/android
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          ./gradlew assembleRelease
        else
          ./gradlew assembleDebug
        fi
    
    - name: Sign Android Release
      if: github.ref == 'refs/heads/main'
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: mobile/android/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
    
    - name: Upload Android App
      uses: actions/upload-artifact@v3
      with:
        name: android-app
        path: |
          mobile/android/app/build/outputs/apk/debug/*.apk
          mobile/android/app/build/outputs/apk/release/*.apk
          mobile/android/app/build/outputs/bundle/release/*.aab

  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./mobile
      run: npm ci
    
    - name: Install CocoaPods
      working-directory: ./mobile/ios
      run: pod install
    
    - name: Build iOS App
      working-directory: ./mobile/ios
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          xcodebuild -workspace SawaPay.xcworkspace -scheme SawaPay -configuration Release -sdk iphoneos -archivePath SawaPay.xcarchive archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        else
          xcodebuild -workspace SawaPay.xcworkspace -scheme SawaPay -configuration Debug -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 14' build
        fi
    
    - name: Upload iOS App
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: ios-app
        path: mobile/ios/SawaPay.xcarchive

  deploy-to-firebase-app-distribution:
    needs: build-android
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Android App
      uses: actions/download-artifact@v3
      with:
        name: android-app
        path: android-app
    
    - name: Deploy to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
        serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DISTRIBUTION }}
        groups: testers
        file: android-app/mobile/android/app/build/outputs/apk/debug/app-debug.apk
        releaseNotes: |
          Changes in this build:
          ${{ github.event.head_commit.message }}

  deploy-to-play-store:
    needs: build-android
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Android App
      uses: actions/download-artifact@v3
      with:
        name: android-app
        path: android-app
    
    - name: Deploy to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
        packageName: com.sawapay.app
        releaseFiles: android-app/mobile/android/app/build/outputs/bundle/release/app-release.aab
        track: internal
        status: completed
        releaseNotes: |
          en-US: |
            Changes in this release:
            ${{ github.event.head_commit.message }}

  deploy-to-testflight:
    needs: build-ios
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download iOS App
      uses: actions/download-artifact@v3
      with:
        name: ios-app
        path: ios-app
    
    - name: Install Apple Certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.IOS_P12_CERTIFICATE }}
        p12-password: ${{ secrets.IOS_P12_PASSWORD }}
    
    - name: Install Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
    
    - name: Build and Sign IPA
      run: |
        cd ios-app
        xcodebuild -exportArchive -archivePath SawaPay.xcarchive -exportOptionsPlist exportOptions.plist -exportPath ./build
    
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: ios-app/build/SawaPay.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
